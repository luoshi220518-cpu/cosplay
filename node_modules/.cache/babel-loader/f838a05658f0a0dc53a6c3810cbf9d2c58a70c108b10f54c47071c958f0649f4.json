{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YY\\\\Desktop\\\\cosplay\\\\src\\\\components\\\\ImageCropper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport { X, Check } from 'lucide-react';\nimport './ImageCropper.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageCropper = ({\n  imageSrc,\n  onCrop,\n  onCancel,\n  aspectRatio = 1,\n  cropShape = 'circle'\n}) => {\n  _s();\n  const [crop, setCrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [zoom, setZoom] = useState(1);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [imageSize, setImageSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const [containerSize, setContainerSize] = useState({\n    width: 300,\n    height: 300\n  });\n  const containerRef = useRef(null);\n  const imageRef = useRef(null);\n  const isDragging = useRef(false);\n  const dragStart = useRef({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (imageSrc) {\n      const img = new Image();\n      img.onload = () => {\n        setImageSize({\n          width: img.width,\n          height: img.height\n        });\n        setImageLoaded(true);\n\n        // 计算图片在容器中的显示尺寸\n        const container = containerRef.current;\n        if (container) {\n          const containerRect = container.getBoundingClientRect();\n          const maxSize = Math.min(containerRect.width, containerRect.height);\n          let displayWidth = img.width;\n          let displayHeight = img.height;\n\n          // 按比例缩放以适应容器\n          if (displayWidth > maxSize || displayHeight > maxSize) {\n            const scale = maxSize / Math.max(displayWidth, displayHeight);\n            displayWidth *= scale;\n            displayHeight *= scale;\n          }\n          setContainerSize({\n            width: displayWidth,\n            height: displayHeight\n          });\n        }\n      };\n      img.src = imageSrc;\n    }\n  }, [imageSrc]);\n\n  // 创建图片对象\n  const createImage = url => new Promise((resolve, reject) => {\n    const img = new Image();\n    img.src = url;\n    img.crossOrigin = \"anonymous\";\n    img.onload = () => resolve(img);\n    img.onerror = e => reject(e);\n  });\n\n  // 生成裁剪后的图片\n  const getCroppedImg = async (imageSrc, cropArea) => {\n    const image = await createImage(imageSrc);\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const cropSize = 200; // 固定裁剪尺寸\n    canvas.width = cropSize;\n    canvas.height = cropSize;\n\n    // 如果是圆形裁剪\n    if (cropShape === 'circle') {\n      ctx.beginPath();\n      ctx.arc(cropSize / 2, cropSize / 2, cropSize / 2, 0, 2 * Math.PI);\n      ctx.clip();\n    }\n\n    // 计算裁剪区域\n    const scaleX = image.width / containerSize.width;\n    const scaleY = image.height / containerSize.height;\n    const sourceX = (crop.x + (containerSize.width - cropSize) / 2) * scaleX;\n    const sourceY = (crop.y + (containerSize.height - cropSize) / 2) * scaleY;\n    const sourceWidth = cropSize * scaleX;\n    const sourceHeight = cropSize * scaleY;\n    ctx.drawImage(image, sourceX, sourceY, sourceWidth, sourceHeight, 0, 0, cropSize, cropSize);\n    return new Promise(resolve => {\n      canvas.toBlob(blob => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.readAsDataURL(blob);\n      }, \"image/jpeg\", 0.9);\n    });\n  };\n\n  // 处理鼠标按下\n  const handleMouseDown = e => {\n    e.preventDefault();\n    isDragging.current = true;\n    dragStart.current = {\n      x: e.clientX - crop.x,\n      y: e.clientY - crop.y\n    };\n  };\n\n  // 处理鼠标移动\n  const handleMouseMove = e => {\n    if (!isDragging.current) return;\n    e.preventDefault();\n    const newX = e.clientX - dragStart.current.x;\n    const newY = e.clientY - dragStart.current.y;\n\n    // 限制拖拽范围\n    const maxX = (containerSize.width - 200) / 2;\n    const maxY = (containerSize.height - 200) / 2;\n    setCrop({\n      x: Math.max(-maxX, Math.min(maxX, newX)),\n      y: Math.max(-maxY, Math.min(maxY, newY))\n    });\n  };\n\n  // 处理鼠标释放\n  const handleMouseUp = () => {\n    isDragging.current = false;\n  };\n\n  // 确认裁剪\n  const handleConfirmCrop = useCallback(async () => {\n    try {\n      const croppedImageData = await getCroppedImg(imageSrc, crop);\n      onCrop(croppedImageData);\n    } catch (e) {\n      console.error('裁剪失败:', e);\n    }\n  }, [imageSrc, crop, onCrop]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-cropper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cropper-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u88C1\\u526A\\u56FE\\u7247\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cropper-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-btn\",\n          onClick: onCancel,\n          children: [/*#__PURE__*/_jsxDEV(X, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), \"\\u53D6\\u6D88\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"confirm-btn\",\n          onClick: handleConfirmCrop,\n          children: [/*#__PURE__*/_jsxDEV(Check, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), \"\\u786E\\u8BA4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cropper-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cropper-container\",\n        ref: containerRef,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        onMouseLeave: handleMouseUp,\n        children: imageLoaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            ref: imageRef,\n            src: imageSrc,\n            alt: \"\\u88C1\\u526A\\u9884\\u89C8\",\n            className: \"crop-image\",\n            style: {\n              width: containerSize.width,\n              height: containerSize.height,\n              transform: `translate(${crop.x}px, ${crop.y}px) scale(${zoom})`,\n              transformOrigin: 'center center'\n            },\n            onMouseDown: handleMouseDown,\n            draggable: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `crop-frame ${cropShape === 'circle' ? 'circle' : 'rect'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cropper-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"zoom-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u7F29\\u653E:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: 0.5,\n          max: 3,\n          step: 0.1,\n          value: zoom,\n          onChange: e => setZoom(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [zoom.toFixed(1), \"x\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cropper-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u62D6\\u62FD\\u56FE\\u7247\\u8C03\\u6574\\u4F4D\\u7F6E\\uFF0C\\u4F7F\\u7528\\u6ED1\\u5757\\u8C03\\u6574\\u7F29\\u653E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageCropper, \"uE7CAVGmBYFdoiuxoqxEAAiuZQs=\");\n_c = ImageCropper;\nexport default ImageCropper;\nvar _c;\n$RefreshReg$(_c, \"ImageCropper\");","map":{"version":3,"names":["React","useState","useCallback","useRef","useEffect","X","Check","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageCropper","imageSrc","onCrop","onCancel","aspectRatio","cropShape","_s","crop","setCrop","x","y","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","imageLoaded","setImageLoaded","imageSize","setImageSize","width","height","containerSize","setContainerSize","containerRef","imageRef","isDragging","dragStart","img","Image","onload","container","current","containerRect","getBoundingClientRect","maxSize","Math","min","displayWidth","displayHeight","scale","max","src","createImage","url","Promise","resolve","reject","crossOrigin","onerror","e","getCroppedImg","cropArea","image","canvas","document","createElement","ctx","getContext","cropSize","beginPath","arc","PI","clip","scaleX","scaleY","sourceX","sourceY","sourceWidth","sourceHeight","drawImage","toBlob","blob","reader","FileReader","result","readAsDataURL","handleMouseDown","preventDefault","clientX","clientY","handleMouseMove","newX","newY","maxX","maxY","handleMouseUp","handleConfirmCrop","croppedImageData","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","ref","onMouseMove","onMouseUp","onMouseLeave","alt","style","transform","transformOrigin","onMouseDown","draggable","type","step","value","onChange","parseFloat","target","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/YY/Desktop/cosplay/src/components/ImageCropper.js"],"sourcesContent":["import React, { useState, useCallback, useRef, useEffect } from 'react';\r\nimport { X, Check } from 'lucide-react';\r\nimport './ImageCropper.css';\r\n\r\nconst ImageCropper = ({ \r\n  imageSrc, \r\n  onCrop, \r\n  onCancel, \r\n  aspectRatio = 1, \r\n  cropShape = 'circle' \r\n}) => {\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const [imageSize, setImageSize] = useState({ width: 0, height: 0 });\r\n  const [containerSize, setContainerSize] = useState({ width: 300, height: 300 });\r\n  \r\n  const containerRef = useRef(null);\r\n  const imageRef = useRef(null);\r\n  const isDragging = useRef(false);\r\n  const dragStart = useRef({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    if (imageSrc) {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        setImageSize({ width: img.width, height: img.height });\r\n        setImageLoaded(true);\r\n        \r\n        // 计算图片在容器中的显示尺寸\r\n        const container = containerRef.current;\r\n        if (container) {\r\n          const containerRect = container.getBoundingClientRect();\r\n          const maxSize = Math.min(containerRect.width, containerRect.height);\r\n          \r\n          let displayWidth = img.width;\r\n          let displayHeight = img.height;\r\n          \r\n          // 按比例缩放以适应容器\r\n          if (displayWidth > maxSize || displayHeight > maxSize) {\r\n            const scale = maxSize / Math.max(displayWidth, displayHeight);\r\n            displayWidth *= scale;\r\n            displayHeight *= scale;\r\n          }\r\n          \r\n          setContainerSize({ width: displayWidth, height: displayHeight });\r\n        }\r\n      };\r\n      img.src = imageSrc;\r\n    }\r\n  }, [imageSrc]);\r\n\r\n  // 创建图片对象\r\n  const createImage = (url) =>\r\n    new Promise((resolve, reject) => {\r\n      const img = new Image();\r\n      img.src = url;\r\n      img.crossOrigin = \"anonymous\";\r\n      img.onload = () => resolve(img);\r\n      img.onerror = (e) => reject(e);\r\n    });\r\n\r\n  // 生成裁剪后的图片\r\n  const getCroppedImg = async (imageSrc, cropArea) => {\r\n    const image = await createImage(imageSrc);\r\n    const canvas = document.createElement(\"canvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const cropSize = 200; // 固定裁剪尺寸\r\n    canvas.width = cropSize;\r\n    canvas.height = cropSize;\r\n\r\n    // 如果是圆形裁剪\r\n    if (cropShape === 'circle') {\r\n      ctx.beginPath();\r\n      ctx.arc(cropSize / 2, cropSize / 2, cropSize / 2, 0, 2 * Math.PI);\r\n      ctx.clip();\r\n    }\r\n\r\n    // 计算裁剪区域\r\n    const scaleX = image.width / containerSize.width;\r\n    const scaleY = image.height / containerSize.height;\r\n    \r\n    const sourceX = (crop.x + (containerSize.width - cropSize) / 2) * scaleX;\r\n    const sourceY = (crop.y + (containerSize.height - cropSize) / 2) * scaleY;\r\n    const sourceWidth = cropSize * scaleX;\r\n    const sourceHeight = cropSize * scaleY;\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      sourceX, sourceY, sourceWidth, sourceHeight,\r\n      0, 0, cropSize, cropSize\r\n    );\r\n\r\n    return new Promise((resolve) => {\r\n      canvas.toBlob((blob) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.readAsDataURL(blob);\r\n      }, \"image/jpeg\", 0.9);\r\n    });\r\n  };\r\n\r\n  // 处理鼠标按下\r\n  const handleMouseDown = (e) => {\r\n    e.preventDefault();\r\n    isDragging.current = true;\r\n    dragStart.current = { x: e.clientX - crop.x, y: e.clientY - crop.y };\r\n  };\r\n\r\n  // 处理鼠标移动\r\n  const handleMouseMove = (e) => {\r\n    if (!isDragging.current) return;\r\n    e.preventDefault();\r\n    \r\n    const newX = e.clientX - dragStart.current.x;\r\n    const newY = e.clientY - dragStart.current.y;\r\n    \r\n    // 限制拖拽范围\r\n    const maxX = (containerSize.width - 200) / 2;\r\n    const maxY = (containerSize.height - 200) / 2;\r\n    \r\n    setCrop({\r\n      x: Math.max(-maxX, Math.min(maxX, newX)),\r\n      y: Math.max(-maxY, Math.min(maxY, newY))\r\n    });\r\n  };\r\n\r\n  // 处理鼠标释放\r\n  const handleMouseUp = () => {\r\n    isDragging.current = false;\r\n  };\r\n\r\n  // 确认裁剪\r\n  const handleConfirmCrop = useCallback(async () => {\r\n    try {\r\n      const croppedImageData = await getCroppedImg(imageSrc, crop);\r\n      onCrop(croppedImageData);\r\n    } catch (e) {\r\n      console.error('裁剪失败:', e);\r\n    }\r\n  }, [imageSrc, crop, onCrop]);\r\n\r\n  return (\r\n    <div className=\"image-cropper\">\r\n      <div className=\"cropper-header\">\r\n        <h3>裁剪图片</h3>\r\n        <div className=\"cropper-actions\">\r\n          <button className=\"cancel-btn\" onClick={onCancel}>\r\n            <X size={16} />\r\n            取消\r\n          </button>\r\n          <button className=\"confirm-btn\" onClick={handleConfirmCrop}>\r\n            <Check size={16} />\r\n            确认\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"cropper-body\">\r\n        <div \r\n          className=\"cropper-container\"\r\n          ref={containerRef}\r\n          onMouseMove={handleMouseMove}\r\n          onMouseUp={handleMouseUp}\r\n          onMouseLeave={handleMouseUp}\r\n        >\r\n          {imageLoaded && (\r\n            <>\r\n              <img\r\n                ref={imageRef}\r\n                src={imageSrc}\r\n                alt=\"裁剪预览\"\r\n                className=\"crop-image\"\r\n                style={{\r\n                  width: containerSize.width,\r\n                  height: containerSize.height,\r\n                  transform: `translate(${crop.x}px, ${crop.y}px) scale(${zoom})`,\r\n                  transformOrigin: 'center center'\r\n                }}\r\n                onMouseDown={handleMouseDown}\r\n                draggable={false}\r\n              />\r\n              \r\n              {/* 裁剪框 */}\r\n              <div \r\n                className={`crop-frame ${cropShape === 'circle' ? 'circle' : 'rect'}`}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"cropper-controls\">\r\n        <div className=\"zoom-control\">\r\n          <label>缩放:</label>\r\n          <input\r\n            type=\"range\"\r\n            min={0.5}\r\n            max={3}\r\n            step={0.1}\r\n            value={zoom}\r\n            onChange={(e) => setZoom(parseFloat(e.target.value))}\r\n          />\r\n          <span>{zoom.toFixed(1)}x</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"cropper-footer\">\r\n        <p>拖拽图片调整位置，使用滑块调整缩放</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCropper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}