{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YY\\\\Desktop\\\\cosplay\\\\src\\\\components\\\\ImageCropper.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { X, Check } from \"lucide-react\";\nimport \"./ImageCropper.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageCropper = ({\n  imageSrc,\n  onCrop,\n  onCancel,\n  aspectRatio = 1,\n  cropShape = \"circle\"\n}) => {\n  _s();\n  const [crop, setCrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [zoom, setZoom] = useState(1);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [imageSize, setImageSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const [displaySize, setDisplaySize] = useState({\n    width: 0,\n    height: 0\n  });\n  const containerRef = useRef(null);\n  const isDragging = useRef(false);\n  const dragStart = useRef({\n    x: 0,\n    y: 0\n  });\n\n  // 加载图片并计算显示尺寸 & 初始居中\n  useEffect(() => {\n    if (imageSrc) {\n      const img = new Image();\n      img.onload = () => {\n        setImageSize({\n          width: img.width,\n          height: img.height\n        });\n        setImageLoaded(true);\n        const container = containerRef.current;\n        if (container) {\n          const containerRect = container.getBoundingClientRect();\n          const containerWidth = containerRect.width;\n          const containerHeight = containerRect.height;\n          const imageAspect = img.width / img.height;\n          const containerAspect = containerWidth / containerHeight;\n          let displayWidth, displayHeight;\n          if (imageAspect > containerAspect) {\n            // 图片更宽，以高度为准\n            displayHeight = containerHeight;\n            displayWidth = displayHeight * imageAspect;\n          } else {\n            // 图片更高，以宽度为准\n            displayWidth = containerWidth;\n            displayHeight = displayWidth / imageAspect;\n          }\n          setDisplaySize({\n            width: displayWidth,\n            height: displayHeight\n          });\n\n          // ✅ 居中显示\n          const initialX = (containerWidth - displayWidth) / 2;\n          const initialY = (containerHeight - displayHeight) / 2;\n          setCrop({\n            x: initialX,\n            y: initialY\n          });\n          setZoom(1);\n        }\n      };\n      img.src = imageSrc;\n    }\n  }, [imageSrc]);\n\n  // 创建图片对象\n  const createImage = url => new Promise((resolve, reject) => {\n    const img = new Image();\n    img.src = url;\n    img.crossOrigin = \"anonymous\";\n    img.onload = () => resolve(img);\n    img.onerror = e => reject(e);\n  });\n\n  // 生成裁剪后的图片\n  const getCroppedImg = async (imageSrc, cropPosition, zoomValue) => {\n    const image = await createImage(imageSrc);\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const cropSize = 200; // 输出头像尺寸\n    canvas.width = cropSize;\n    canvas.height = cropSize;\n    const container = containerRef.current;\n    const containerRect = container.getBoundingClientRect();\n    const containerWidth = containerRect.width;\n    const containerHeight = containerRect.height;\n\n    // ✅ 缩放后的真实尺寸\n    const scaledWidth = displaySize.width * zoomValue;\n    const scaledHeight = displaySize.height * zoomValue;\n\n    // 裁剪框（居中）\n    const frameSize = Math.min(containerWidth, containerHeight) * 0.8;\n\n    // 计算图片在容器中的偏移\n    const offsetX = cropPosition.x;\n    const offsetY = cropPosition.y;\n\n    // 原始图与显示图的比例\n    const scaleX = imageSize.width / scaledWidth;\n    const scaleY = imageSize.height / scaledHeight;\n\n    // 计算源图截取区域\n    const sourceX = (containerWidth - frameSize) / 2 - offsetX;\n    const sourceY = (containerHeight - frameSize) / 2 - offsetY;\n    const sourceWidth = frameSize;\n    const sourceHeight = frameSize;\n    ctx.save();\n\n    // 如果是圆形裁剪\n    if (cropShape === \"circle\") {\n      ctx.beginPath();\n      ctx.arc(cropSize / 2, cropSize / 2, cropSize / 2, 0, 2 * Math.PI);\n      ctx.clip();\n    }\n    ctx.drawImage(image, sourceX * scaleX, sourceY * scaleY, sourceWidth * scaleX, sourceHeight * scaleY, 0, 0, cropSize, cropSize);\n    ctx.restore();\n    return new Promise(resolve => {\n      canvas.toBlob(blob => {\n        const reader = new FileReader();\n        reader.onload = () => resolve(reader.result);\n        reader.readAsDataURL(blob);\n      }, \"image/jpeg\");\n    });\n  };\n\n  // 拖拽控制\n  const handleMouseDown = e => {\n    e.preventDefault();\n    isDragging.current = true;\n    dragStart.current = {\n      x: e.clientX - crop.x,\n      y: e.clientY - crop.y\n    };\n  };\n  const handleMouseMove = e => {\n    if (!isDragging.current) return;\n    e.preventDefault();\n    const newX = e.clientX - dragStart.current.x;\n    const newY = e.clientY - dragStart.current.y;\n    setCrop({\n      x: newX,\n      y: newY\n    });\n  };\n  const handleMouseUp = () => {\n    isDragging.current = false;\n  };\n\n  // 确认裁剪\n  const handleConfirmCrop = useCallback(async () => {\n    try {\n      const croppedImageData = await getCroppedImg(imageSrc, crop, zoom);\n      onCrop(croppedImageData);\n    } catch (e) {\n      console.error(\"裁剪失败:\", e);\n    }\n  }, [imageSrc, crop, zoom, onCrop]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-cropper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cropper-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u88C1\\u526A\\u56FE\\u7247\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cropper-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-btn\",\n          onClick: onCancel,\n          children: [/*#__PURE__*/_jsxDEV(X, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), \" \\u53D6\\u6D88\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"confirm-btn\",\n          onClick: handleConfirmCrop,\n          children: [/*#__PURE__*/_jsxDEV(Check, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), \" \\u786E\\u8BA4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cropper-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cropper-container\",\n        ref: containerRef,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        onMouseLeave: handleMouseUp,\n        children: imageLoaded && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageSrc,\n            alt: \"\\u88C1\\u526A\\u9884\\u89C8\",\n            className: \"crop-image\",\n            style: {\n              width: displaySize.width * zoom,\n              height: displaySize.height * zoom,\n              transform: `translate(${crop.x}px, ${crop.y}px)`\n            },\n            onMouseDown: handleMouseDown,\n            draggable: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `crop-frame ${cropShape === \"circle\" ? \"circle\" : \"rect\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cropper-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"zoom-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u7F29\\u653E:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: 0.5,\n          max: 3,\n          step: 0.1,\n          value: zoom,\n          onChange: e => setZoom(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [zoom.toFixed(1), \"x\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cropper-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u62D6\\u62FD\\u56FE\\u7247\\u8C03\\u6574\\u4F4D\\u7F6E\\uFF0C\\u4F7F\\u7528\\u6ED1\\u5757\\u8C03\\u6574\\u7F29\\u653E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageCropper, \"cSGf08TmT1lB4zgTASYFQaGGZWw=\");\n_c = ImageCropper;\nexport default ImageCropper;\nvar _c;\n$RefreshReg$(_c, \"ImageCropper\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","X","Check","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageCropper","imageSrc","onCrop","onCancel","aspectRatio","cropShape","_s","crop","setCrop","x","y","zoom","setZoom","imageLoaded","setImageLoaded","imageSize","setImageSize","width","height","displaySize","setDisplaySize","containerRef","isDragging","dragStart","img","Image","onload","container","current","containerRect","getBoundingClientRect","containerWidth","containerHeight","imageAspect","containerAspect","displayWidth","displayHeight","initialX","initialY","src","createImage","url","Promise","resolve","reject","crossOrigin","onerror","e","getCroppedImg","cropPosition","zoomValue","image","canvas","document","createElement","ctx","getContext","cropSize","scaledWidth","scaledHeight","frameSize","Math","min","offsetX","offsetY","scaleX","scaleY","sourceX","sourceY","sourceWidth","sourceHeight","save","beginPath","arc","PI","clip","drawImage","restore","toBlob","blob","reader","FileReader","result","readAsDataURL","handleMouseDown","preventDefault","clientX","clientY","handleMouseMove","newX","newY","handleMouseUp","handleConfirmCrop","croppedImageData","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","ref","onMouseMove","onMouseUp","onMouseLeave","alt","style","transform","onMouseDown","draggable","type","max","step","value","onChange","parseFloat","target","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/YY/Desktop/cosplay/src/components/ImageCropper.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\r\nimport { X, Check } from \"lucide-react\";\r\nimport \"./ImageCropper.css\";\r\n\r\nconst ImageCropper = ({\r\n  imageSrc,\r\n  onCrop,\r\n  onCancel,\r\n  aspectRatio = 1,\r\n  cropShape = \"circle\",\r\n}) => {\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n  const [imageLoaded, setImageLoaded] = useState(false);\r\n  const [imageSize, setImageSize] = useState({ width: 0, height: 0 });\r\n  const [displaySize, setDisplaySize] = useState({ width: 0, height: 0 });\r\n\r\n  const containerRef = useRef(null);\r\n  const isDragging = useRef(false);\r\n  const dragStart = useRef({ x: 0, y: 0 });\r\n\r\n  // 加载图片并计算显示尺寸 & 初始居中\r\n  useEffect(() => {\r\n    if (imageSrc) {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        setImageSize({ width: img.width, height: img.height });\r\n        setImageLoaded(true);\r\n\r\n        const container = containerRef.current;\r\n        if (container) {\r\n          const containerRect = container.getBoundingClientRect();\r\n          const containerWidth = containerRect.width;\r\n          const containerHeight = containerRect.height;\r\n\r\n          const imageAspect = img.width / img.height;\r\n          const containerAspect = containerWidth / containerHeight;\r\n\r\n          let displayWidth, displayHeight;\r\n\r\n          if (imageAspect > containerAspect) {\r\n            // 图片更宽，以高度为准\r\n            displayHeight = containerHeight;\r\n            displayWidth = displayHeight * imageAspect;\r\n          } else {\r\n            // 图片更高，以宽度为准\r\n            displayWidth = containerWidth;\r\n            displayHeight = displayWidth / imageAspect;\r\n          }\r\n\r\n          setDisplaySize({ width: displayWidth, height: displayHeight });\r\n\r\n          // ✅ 居中显示\r\n          const initialX = (containerWidth - displayWidth) / 2;\r\n          const initialY = (containerHeight - displayHeight) / 2;\r\n\r\n          setCrop({ x: initialX, y: initialY });\r\n          setZoom(1);\r\n        }\r\n      };\r\n      img.src = imageSrc;\r\n    }\r\n  }, [imageSrc]);\r\n\r\n  // 创建图片对象\r\n  const createImage = (url) =>\r\n    new Promise((resolve, reject) => {\r\n      const img = new Image();\r\n      img.src = url;\r\n      img.crossOrigin = \"anonymous\";\r\n      img.onload = () => resolve(img);\r\n      img.onerror = (e) => reject(e);\r\n    });\r\n\r\n  // 生成裁剪后的图片\r\n  const getCroppedImg = async (imageSrc, cropPosition, zoomValue) => {\r\n    const image = await createImage(imageSrc);\r\n    const canvas = document.createElement(\"canvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const cropSize = 200; // 输出头像尺寸\r\n    canvas.width = cropSize;\r\n    canvas.height = cropSize;\r\n\r\n    const container = containerRef.current;\r\n    const containerRect = container.getBoundingClientRect();\r\n    const containerWidth = containerRect.width;\r\n    const containerHeight = containerRect.height;\r\n\r\n    // ✅ 缩放后的真实尺寸\r\n    const scaledWidth = displaySize.width * zoomValue;\r\n    const scaledHeight = displaySize.height * zoomValue;\r\n\r\n    // 裁剪框（居中）\r\n    const frameSize = Math.min(containerWidth, containerHeight) * 0.8;\r\n\r\n    // 计算图片在容器中的偏移\r\n    const offsetX = cropPosition.x;\r\n    const offsetY = cropPosition.y;\r\n\r\n    // 原始图与显示图的比例\r\n    const scaleX = imageSize.width / scaledWidth;\r\n    const scaleY = imageSize.height / scaledHeight;\r\n\r\n    // 计算源图截取区域\r\n    const sourceX = (containerWidth - frameSize) / 2 - offsetX;\r\n    const sourceY = (containerHeight - frameSize) / 2 - offsetY;\r\n    const sourceWidth = frameSize;\r\n    const sourceHeight = frameSize;\r\n\r\n    ctx.save();\r\n\r\n    // 如果是圆形裁剪\r\n    if (cropShape === \"circle\") {\r\n      ctx.beginPath();\r\n      ctx.arc(cropSize / 2, cropSize / 2, cropSize / 2, 0, 2 * Math.PI);\r\n      ctx.clip();\r\n    }\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      sourceX * scaleX,\r\n      sourceY * scaleY,\r\n      sourceWidth * scaleX,\r\n      sourceHeight * scaleY,\r\n      0,\r\n      0,\r\n      cropSize,\r\n      cropSize\r\n    );\r\n\r\n    ctx.restore();\r\n\r\n    return new Promise((resolve) => {\r\n      canvas.toBlob((blob) => {\r\n        const reader = new FileReader();\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.readAsDataURL(blob);\r\n      }, \"image/jpeg\");\r\n    });\r\n  };\r\n\r\n  // 拖拽控制\r\n  const handleMouseDown = (e) => {\r\n    e.preventDefault();\r\n    isDragging.current = true;\r\n    dragStart.current = { x: e.clientX - crop.x, y: e.clientY - crop.y };\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDragging.current) return;\r\n    e.preventDefault();\r\n\r\n    const newX = e.clientX - dragStart.current.x;\r\n    const newY = e.clientY - dragStart.current.y;\r\n\r\n    setCrop({ x: newX, y: newY });\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    isDragging.current = false;\r\n  };\r\n\r\n  // 确认裁剪\r\n  const handleConfirmCrop = useCallback(async () => {\r\n    try {\r\n      const croppedImageData = await getCroppedImg(imageSrc, crop, zoom);\r\n      onCrop(croppedImageData);\r\n    } catch (e) {\r\n      console.error(\"裁剪失败:\", e);\r\n    }\r\n  }, [imageSrc, crop, zoom, onCrop]);\r\n\r\n  return (\r\n    <div className=\"image-cropper\">\r\n      <div className=\"cropper-header\">\r\n        <h3>裁剪图片</h3>\r\n        <div className=\"cropper-actions\">\r\n          <button className=\"cancel-btn\" onClick={onCancel}>\r\n            <X size={16} /> 取消\r\n          </button>\r\n          <button className=\"confirm-btn\" onClick={handleConfirmCrop}>\r\n            <Check size={16} /> 确认\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"cropper-body\">\r\n        <div\r\n          className=\"cropper-container\"\r\n          ref={containerRef}\r\n          onMouseMove={handleMouseMove}\r\n          onMouseUp={handleMouseUp}\r\n          onMouseLeave={handleMouseUp}\r\n        >\r\n          {imageLoaded && (\r\n            <>\r\n              <img\r\n                src={imageSrc}\r\n                alt=\"裁剪预览\"\r\n                className=\"crop-image\"\r\n                style={{\r\n                  width: displaySize.width * zoom,\r\n                  height: displaySize.height * zoom,\r\n                  transform: `translate(${crop.x}px, ${crop.y}px)`,\r\n                }}\r\n                onMouseDown={handleMouseDown}\r\n                draggable={false}\r\n              />\r\n\r\n              {/* 裁剪框 */}\r\n              <div\r\n                className={`crop-frame ${\r\n                  cropShape === \"circle\" ? \"circle\" : \"rect\"\r\n                }`}\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"cropper-controls\">\r\n        <div className=\"zoom-control\">\r\n          <label>缩放:</label>\r\n          <input\r\n            type=\"range\"\r\n            min={0.5}\r\n            max={3}\r\n            step={0.1}\r\n            value={zoom}\r\n            onChange={(e) => setZoom(parseFloat(e.target.value))}\r\n          />\r\n          <span>{zoom.toFixed(1)}x</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"cropper-footer\">\r\n        <p>拖拽图片调整位置，使用滑块调整缩放</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCropper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}